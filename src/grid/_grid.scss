/// The maximum width of a row.
///
/// @type Number
$grid-row-width: $global-width !default;

/// The default column count of a grid. Changing this value affects the logic of the grid mixins, and the number of CSS classes output.
///
/// @type Number
$grid-column-count: 12 !default;

/// The amount of space between columns at different screen sizes.
///
/// @type Map | Number
$grid-column-gutter: (
  small: rem-calc(20),
  medium: rem-calc(30)
) !default;

/// The maximum number of cells in a block grid.
///
/// @type Number
$grid-block-max: 8 !default;

@import 'column';
@import 'gutter';
@import 'row';

/// Outputs CSS classes for the grid.
@mixin base-grid {
  .row {
    @include grid-row-base;

    & .row:not(.collapse) {
      @include grid-row-nest-gutter;
    }

    &.collapse {
      @include grid-row-collapse;
    }

    // Expanding
    &.expanded,
    &.expanded .row { // sass-lint:disable-line force-element-nesting
      max-width: none;
    }

    @each $breakpoint in map-keys($breakpoints) {
      @include breakpoint-up($breakpoint) {

        // Block grid
        @for $i from 1 through $grid-block-max {
          &.#{$breakpoint}-up-#{$i} {
            @include grid-block-base($i);
          }
        }
      }
    }
  }

  .column {
    @include grid-column;
    @include grid-column-gutter;

    // Sizing
    &.shrink {
      @include grid-column(shrink);
    }

    @each $breakpoint in map-keys($breakpoints) {
      @include breakpoint-up($breakpoint) {
        @for $i from 1 through $grid-column-count {
          // Sizing
          &.#{$breakpoint}-#{$i} {
            @include grid-column($i);
          }
        }
      }
    }
  }
}
